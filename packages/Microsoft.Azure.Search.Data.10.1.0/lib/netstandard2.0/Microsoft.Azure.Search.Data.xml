<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Search.Data</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Azure.Search.DocumentsOperations.#ctor(Microsoft.Azure.Search.SearchIndexClient)">
            <summary>
            Initializes a new instance of the DocumentsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Search.DocumentsOperations.Client">
            <summary>
            Gets a reference to the SearchIndexClient
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.DocumentsOperationsExtensions">
            <summary>
            Operations for querying an index and uploading, merging, and deleting documents.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Document-operations" />
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Count(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Queries the number of documents in the search index.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.CountAsync(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Queries the number of documents in the search index.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Autocomplete(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.String,Microsoft.Azure.Search.Models.AutocompleteParameters,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Queries the number of documents in the search index.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.AutocompleteAsync(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.String,Microsoft.Azure.Search.Models.AutocompleteParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Queries the number of documents in the search index.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.ContinueSearch(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Retrieves the next page of search results from the search index. 
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search results from the index.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The non-generic overloads of the ContinueSearch, ContinueSearchAsync, and
            ContinueSearchWithHttpMessagesAsync methods make a best-effort attempt to map JSON types in the response
            payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </para>
            <para>
            If Azure Cognitive Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">DocumentSearchResult.ContinuationToken</c>
            for more information.
            </para>
            <para>
            Note that this method is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            parameters to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">Search</c>
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.ContinueSearchAsync(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Retrieves the next page of search results from the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search results from the index.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The non-generic overloads of the ContinueSearch, ContinueSearchAsync, and
            ContinueSearchWithHttpMessagesAsync methods make a best-effort attempt to map JSON types in the response
            payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </para>
            <para>
            If Azure Cognitive Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">DocumentSearchResult.ContinuationToken</c>
            for more information.
            </para>
            <para>
            Note that this method is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            parameters to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">Search</c>
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.ContinueSearch``1(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Retrieves the next page of search results from the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search results from the index.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The generic overloads of the ContinueSearch, ContinueSearchAsync, and ContinueSearchWithHttpMessagesAsync
            methods support mapping of search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </para>
            <para>
            If Azure Cognitive Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">DocumentSearchResult.ContinuationToken</c>
            for more information.
            </para>
            <para>
            Note that this method is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            parameters to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">Search</c>
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.ContinueSearchAsync``1(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Retrieves the next page of search results from the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search results from the index.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The generic overloads of the ContinueSearch, ContinueSearchAsync, and ContinueSearchWithHttpMessagesAsync
            methods support mapping of search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </para>
            <para>
            If Azure Cognitive Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">DocumentSearchResult.ContinuationToken</c>
            for more information.
            </para>
            <para>
            Note that this method is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            parameters to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">Search</c>
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Get(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Retrieves a document from the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Lookup-Document"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="key">
            The key of the document to retrieve; See 
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules"/> for the rules for constructing valid
            document keys.
            </param>
            <param name="selectedFields">
            List of field names to retrieve for the document; Any field not retrieved will be missing from the
            returned document. All retrievable fields are included in the result by default.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            The requested document.
            </returns>
            <remarks>
            The non-generic overloads of the Get, GetAsync, and GetWithHttpMessagesAsync methods make a best-effort
            attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.GetAsync(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Retrieves a document from the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Lookup-Document"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="key">
            The key of the document to retrieve; See 
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules"/> for the rules for constructing valid
            document keys.
            </param>
            <param name="selectedFields">
            List of field names to retrieve for the document; Any field not retrieved will be missing from the
            returned document.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            The requested document.
            </returns>
            <remarks>
            The non-generic overloads of the Get, GetAsync, and GetWithHttpMessagesAsync methods make a best-effort
            attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Get``1(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Retrieves a document from the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Lookup-Document"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="key">
            The key of the document to retrieve; See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules"/> for the rules for constructing valid
            document keys.
            </param>
            <param name="selectedFields">
            List of field names to retrieve for the document; Any field not retrieved will have null or default as its
            corresponding property value in the returned object. All retrievable fields are included in the result by
            default.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            The requested document.
            </returns>
            <remarks>
            The generic overloads of the Get, GetAsync, and GetWithHttpMessagesAsync methods support mapping of Azure
            Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.GetAsync``1(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Retrieves a document from the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Lookup-Document"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="key">
            The key of the document to retrieve; See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules"/> for the rules for constructing valid
            document keys.
            </param>
            <param name="selectedFields">
            List of field names to retrieve for the document; Any field not retrieved will have null or default as its
            corresponding property value in the returned object. All retrievable fields are included in the result by
            default.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            The requested document.
            </returns>
            <remarks>
            The generic overloads of the Get, GetAsync, and GetWithHttpMessagesAsync methods support mapping of Azure
            Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Index(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.IndexBatch{Microsoft.Azure.Search.Models.Document},Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="batch">
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <exception cref="T:Microsoft.Azure.Search.IndexBatchException">
            Thrown when some of the indexing actions failed, but other actions succeeded and modified the state of
            the index. This can happen when the Search Service is under heavy indexing load. It is important to
            explicitly catch this exception and check its
            <c cref="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">IndexResult</c> property. This property reports the status
            of each indexing action in the batch, making it possible to determine the state of the index after a
            partial failure.
            </exception>
            <remarks>
            The non-generic overloads of the Index, IndexAsync, and IndexWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
            <returns>
            Response containing the status of operations for all actions in the batch.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.IndexAsync(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.IndexBatch{Microsoft.Azure.Search.Models.Document},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="batch">
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Search.IndexBatchException">
            Thrown when some of the indexing actions failed, but other actions succeeded and modified the state of
            the index. This can happen when the Search Service is under heavy indexing load. It is important to
            explicitly catch this exception and check its
            <c cref="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">IndexResult</c> property. This property reports the status
            of each indexing action in the batch, making it possible to determine the state of the index after a
            partial failure.
            </exception>
            <remarks>
            The non-generic overloads of the Index, IndexAsync, and IndexWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
            <returns>
            Response containing the status of operations for all actions in the batch.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Index``1(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.IndexBatch{``0},Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="batch">
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <exception cref="T:Microsoft.Azure.Search.IndexBatchException">
            Thrown when some of the indexing actions failed, but other actions succeeded and modified the state of
            the index. This can happen when the Search Service is under heavy indexing load. It is important to
            explicitly catch this exception and check its
            <c cref="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">IndexResult</c> property. This property reports the status
            of each indexing action in the batch, making it possible to determine the state of the index after a
            partial failure.
            </exception>
            <returns>
            Response containing the status of operations for all actions in the batch.
            </returns>
            <remarks>
            The generic overloads of the Index and IndexAsync methods support mapping of search field types to
            .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.IndexAsync``1(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.IndexBatch{``0},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="batch">
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Search.IndexBatchException">
            Thrown when some of the indexing actions failed, but other actions succeeded and modified the state of
            the index. This can happen when the Search Service is under heavy indexing load. It is important to
            explicitly catch this exception and check its
            <c cref="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">IndexResult</c> property. This property reports the status
            of each indexing action in the batch, making it possible to determine the state of the index after a
            partial failure.
            </exception>
            <returns>
            Response containing the status of operations for all actions in the batch.
            </returns>
            <remarks>
            The generic overloads of the Index and IndexAsync methods support mapping of search field types to
            .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Search(Microsoft.Azure.Search.IDocumentsOperations,System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Searches for documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            A full-text search query expression; Use null or "*" to match all documents. See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"/> for more information about search
            query syntax.
            </param>
            <param name="searchParameters">
            Parameters to further refine the search query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The non-generic overloads of the Search, SearchAsync, and SearchWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </para>
            <para>
            If Azure Cognitive Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">DocumentSearchResult.ContinuationToken</c>
            for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.SearchAsync(Microsoft.Azure.Search.IDocumentsOperations,System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Searches for documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            A full-text search query expression; Use null or "*" to match all documents. See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"/> for more information about search
            query syntax.
            </param>
            <param name="searchParameters">
            Parameters to further refine the search query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The non-generic overloads of the Search, SearchAsync, and SearchWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </para>
            <para>
            If Azure Cognitive Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">DocumentSearchResult.ContinuationToken</c>
            for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Search``1(Microsoft.Azure.Search.IDocumentsOperations,System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Searches for documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            A full-text search query expression; Use null or "*" to match all documents. See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"/> for more information about search
            query syntax.
            </param>
            <param name="searchParameters">
            Parameters to further refine the search query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The generic overloads of the Search, SearchAsync, and SearchWithHttpMessagesAsync methods support mapping
            of search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </para>
            <para>
            If Azure Cognitive Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">DocumentSearchResult.ContinuationToken</c>
            for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.SearchAsync``1(Microsoft.Azure.Search.IDocumentsOperations,System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Searches for documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            A full-text search query expression; Use null or "*" to match all documents. See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"/> for more information about search
            query syntax.
            </param>
            <param name="searchParameters">
            Parameters to further refine the search query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The generic overloads of the Search, SearchAsync, and SearchWithHttpMessagesAsync methods support mapping
            of search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </para>
            <para>
            If Azure Cognitive Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">DocumentSearchResult.ContinuationToken</c>
            for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Suggest(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Suggests query terms based on input text and matching documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Suggestions"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            The search text on which to base suggestions.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection that's part of the index definition.
            </param>
            <param name="suggestParameters">
            Parameters to further refine the suggestion query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            Response containing the suggested text and documents matching the query.
            </returns>
            <remarks>
            The non-generic overloads of the Suggest, SuggestAsync, and SuggestWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.SuggestAsync(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Suggests query terms based on input text and matching documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Suggestions"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            The search text on which to base suggestions.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection that's part of the index definition.
            </param>
            <param name="suggestParameters">
            Parameters to further refine the suggestion query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the suggested text and documents matching the query.
            </returns>
            <remarks>
            The non-generic overloads of the Suggest, SuggestAsync, and SuggestWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Suggest``1(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Suggests query terms based on input text and matching documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Suggestions"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            The search text on which to base suggestions.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection that's part of the index definition.
            </param>
            <param name="suggestParameters">
            Parameters to further refine the suggestion query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            Response containing the suggested text and documents matching the query.
            </returns>
            <remarks>
            The generic overloads of the Suggest, SuggestAsync, and SuggestWithHttpMessagesAsync methods support
            mapping of search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.SuggestAsync``1(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Suggests query terms based on input text and matching documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Suggestions"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            The search text on which to base suggestions.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection that's part of the index definition.
            </param>
            <param name="suggestParameters">
            Parameters to further refine the suggestion query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the suggested text and documents matching the query.
            </returns>
            <remarks>
            The generic overloads of the Suggest, SuggestAsync, and SuggestWithHttpMessagesAsync methods support
            mapping of search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Search.IDocumentsOperations">
            <summary>
            Defines operations for querying an index and uploading, merging, and deleting documents.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Document-operations" />
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.CountWithHttpMessagesAsync(Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Queries the number of documents in the search index.
            </summary>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.AutocompleteWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Search.Models.AutocompleteParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Queries the number of documents in the search index.
            </summary>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.ContinueSearchWithHttpMessagesAsync(Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves the next page of search results from the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search results from the index.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The non-generic overloads of the ContinueSearch, ContinueSearchAsync, and
            ContinueSearchWithHttpMessagesAsync methods make a best-effort attempt to map JSON types in the response
            payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </para>
            <para>
            If Azure Cognitive Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">DocumentSearchResult.ContinuationToken</c>
            for more information.
            </para>
            <para>
            Note that this method is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            parameters to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">Search</c>
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.ContinueSearchWithHttpMessagesAsync``1(Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves the next page of search results from the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search results from the index.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The generic overloads of the ContinueSearch, ContinueSearchAsync, and ContinueSearchWithHttpMessagesAsync
            methods support mapping of search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </para>
            <para>
            If Azure Cognitive Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">DocumentSearchResult.ContinuationToken</c>
            for more information.
            </para>
            <para>
            Note that this method is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            parameters to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">Search</c>
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a document from the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Lookup-Document"/>
            </summary>
            <param name="key">
            The key of the document to retrieve; See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules"/> for the rules for constructing valid
            document keys.
            </param>
            <param name="selectedFields">
            List of field names to retrieve for the document; Any field not retrieved will be missing from the
            returned document.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the document.
            </returns>
            <remarks>
            The non-generic overloads of the Get, GetAsync, and GetWithHttpMessagesAsync methods make a best-effort
            attempt to map JSON types in the response payload to .NET types. This mapping does not have the benefit of
            precise type information from the index, so the mapping is not always correct. In particular, be aware of
            the following cases:
            <list type="bullet">
            <item>
            <description>
            Any numeric value without a decimal point will be deserialized to System.Int64 (long in C#, int64 in F#).
            </description>
            </item>
            <item>
            <description>
            Special double-precision floating point values such as NaN and Infinity will be deserialized as type
            System.String rather than System.Double, even if they are in arrays with regular floating point values.
            </description>
            </item>
            <item>
            <description>
            Any string field with a value formatted like a DateTimeOffset will be deserialized incorrectly. This applies to
            such values in arrays of strings as well. We recommend storing such values in Edm.DateTimeOffset fields rather
            than Edm.String fields.
            </description>
            </item>
            <item>
            <description>
            Any Edm.DateTimeOffset field will be deserialized as a System.DateTimeOffset, not System.DateTime.
            </description>
            </item>
            <item>
            <description>
            Any empty JSON array will be deserialized as an array of System.Object (object[] in C#, obj[] in F#).
            </description>
            </item>
            <item>
            <description>
            Any array of a primitive type will be deserialized as an array of its corresponding .NET type, not as an array of
            System.Object, unless the values cannot all be deserialized to the same type. For example, the arrays [3.14, "NaN"] and
            ["hello", "2016-10-10T17:41:05.123-07:00"] will both deserialize as arrays of System.Object (object[] in C#, obj[] in F#).
            This is because special double values always deserialize as strings, while strings that look like DateTimeOffset always
            deserialize as DateTimeOffset.
            </description>
            </item>
            <item>
            <description>
            Complex fields will be recursively deserialized into instances of type <c cref="T:Microsoft.Azure.Search.Models.Document">Document</c>. Similarly, complex
            collection fields will be deserialized into arrays of such instances.
            </description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a document from the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Lookup-Document"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name="key">
            The key of the document to retrieve; See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules"/> for the rules for constructing valid
            document keys.
            </param>
            <param name="selectedFields">
            List of field names to retrieve for the document; Any field not retrieved will have null or default as its
            corresponding property value in the returned object.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the document.
            </returns>
            <remarks>
            The generic overloads of the Get, GetAsync, and GetWithHttpMessagesAsync methods support mapping of Azure
            Search field types to .NET types via the type parameter T. Note that all search field types except
            collections are nullable, so we recommend using nullable types for the properties of T.
            The type mapping is as follows:
            <list type="table">
            <listheader>
            <term>Search field type</term>
            <description>.NET type</description>
            </listheader>
            <item>
            <term>Edm.String</term>
            <description>System.String (string in C# and F#)</description>
            </item>
            <item>
            <term>Edm.Boolean</term>
            <description>System.Nullable&lt;System.Boolean&gt; (bool? in C#, Nullable&lt;bool&gt; in F#)</description>
            </item>
            <item>
            <term>Edm.Double</term>
            <description>System.Nullable&lt;System.Double&gt; (double? in C#, Nullable&lt;float&gt; in F#)</description>
            </item>
            <item>
            <term>Edm.Int32</term>
            <description>System.Nullable&lt;System.Int32&gt; (int? in C#, Nullable&lt;int&gt; in F#)</description>
            </item>
            <item>
            <term>Edm.Int64</term>
            <description>System.Nullable&lt;System.Int64&gt; (long? in C#, Nullable&lt;int64&gt; in F#)</description>
            </item>
            <item>
            <term>Edm.DateTimeOffset</term>
            <description>
            System.Nullable&lt;System.DateTimeOffset&gt; (DateTimeOffset? in C#, Nullable&lt;DateTimeOffset&gt; in F#) or
            System.Nullable&lt;System.DateTime&gt; (DateTime? in C#, Nullable&lt;DateTime&gt; in F#). Both types work, although we
            recommend using DateTimeOffset. When retrieving documents, DateTime values will always be in UTC. When indexing
            documents, DateTime values are interpreted as follows:
            <list type="table">
            <item>
            <term>UTC DateTime</term>
            <description>Sent as-is to the index.</description>
            </item>
            <item>
            <term>Local DateTime</term>
            <description>Converted to UTC before being sent to the index.</description>
            </item>
            <item>
            <term>DateTime with unspecified time zone</term>
            <description>Assumed to be UTC and sent as-is to the index.</description>
            </item>
            </list>
            </description>
            </item>
            <item>
            <term>Edm.GeographyPoint</term>
            <description><c cref="T:Microsoft.Spatial.GeographyPoint">Microsoft.Spatial.GeographyPoint</c></description>
            </item>
            <item>
            <term>Edm.ComplexType</term>
            <description>
            Any type that can be deserialized from the JSON objects in the complex field. This can be a value type or a reference type,
            but we recommend using a reference type since complex fields are nullable in Azure Cognitive Search.
            </description>
            </item>
            <item>
            <term>Collection(Edm.String)</term>
            <description>IEnumerable&lt;System.String&gt; (seq&lt;string&gt; in F#)</description>
            </item>
            <item>
            <term>Collection(Edm.Boolean)</term>
            <description>IEnumerable&lt;System.Boolean&gt; (seq&lt;bool&gt; in F#)</description>
            </item>
            <item>
            <term>Collection(Edm.Double)</term>
            <description>IEnumerable&lt;System.Double&gt; (seq&lt;float&gt; in F#)</description>
            </item>
            <item>
            <term>Collection(Edm.Int32)</term>
            <description>IEnumerable&lt;System.Int32&gt; (seq&lt;int&gt; in F#)</description>
            </item>
            <item>
            <term>Collection(Edm.Int64)</term>
            <description>IEnumerable&lt;System.Int64&gt; (seq&lt;int64&gt; in F#)</description>
            </item>
            <item>
            <term>Collection(Edm.DateTimeOffset)</term>
            <description>
            IEnumerable&lt;System.DateTimeOffset&gt; or IEnumerable&lt;System.DateTime&gt; (seq&lt;DateTimeOffset&gt; or
            seq&lt;DateTime&gt; in F#). Both types work, although we recommend using IEnumerable&lt;System.DateTimeOffset&gt;.
            See the notes above on Edm.DateTimeOffset for details.
            </description>
            </item>
            <item>
            <term>Collection(Edm.GeographyPoint)</term>
            <description>IEnumerable&lt;Microsoft.Spatial.GeographyPoint&gt; (seq&lt;GeographyPoint&gt; in F#)</description>
            </item>
            <item>
            <term>Collection(Edm.ComplexType)</term>
            <description>
            IEnumerable&lt;U&gt; (seq&lt;U&gt; in F#) where U is any type that can be deserialized from the JSON objects in the complex
            collection field. This can be a value type or a reference type.
            </description>
            </item>
            </list> 
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.IndexWithHttpMessagesAsync(Microsoft.Azure.Search.Models.IndexBatch{Microsoft.Azure.Search.Models.Document},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents"/>
            </summary>
            <param name="batch">
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Search.IndexBatchException">
            Thrown when some of the indexing actions failed, but other actions succeeded and modified the state of
            the index. This can happen when the Search Service is under heavy indexing load. It is important to
            explicitly catch this exception and check its
            <c cref="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">IndexResult</c> property. This property reports the status
            of each indexing action in the batch, making it possible to determine the state of the index after a
            partial failure.
            </exception>
            <remarks>
            The non-generic overloads of the Index, IndexAsync, and IndexWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
            <returns>
            Response containing the status of operations for all actions in the batch.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.IndexWithHttpMessagesAsync``1(Microsoft.Azure.Search.Models.IndexBatch{``0},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="batch">
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Search.IndexBatchException">
            Thrown when some of the indexing actions failed, but other actions succeeded and modified the state of
            the index. This can happen when the Search Service is under heavy indexing load. It is important to
            explicitly catch this exception and check its
            <c cref="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">IndexResult</c> property. This property reports the status
            of each indexing action in the batch, making it possible to determine the state of the index after a
            partial failure.
            </exception>
            <returns>
            Response containing the status of operations for all actions in the batch.
            </returns>
            <remarks>
            The generic overloads of the Index, IndexAsync, and IndexWithHttpMessagesAsync methods support mapping of
            search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Searches for documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <param name="searchText">
            A full-text search query expression; Use null or "*" to match all documents. See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"/> for more information about search
            query syntax.
            </param>
            <param name="searchParameters">
            Parameters to further refine the search query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The non-generic overloads of the Search, SearchAsync, and SearchWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </para>
            <para>
            If Azure Cognitive Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">DocumentSearchResult.ContinuationToken</c>
            for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Searches for documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name="searchText">
            A full-text search query expression; Use null or "*" to match all documents. See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"/> for more information about search
            query syntax.
            </param>
            <param name="searchParameters">
            Parameters to further refine the search query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The generic overloads of the Search, SearchAsync, and SearchWithHttpMessagesAsync methods support mapping
            of search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </para>
            <para>
            If Azure Cognitive Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">DocumentSearchResult.ContinuationToken</c>
            for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.SuggestWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Suggests query terms based on input text and matching documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Suggestions"/>
            </summary>
            <param name="searchText">
            The search text on which to base suggestions.
            </param>
            <param name="suggestParameters">
            Parameters to further refine the suggestion query.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection that's part of the index definition.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the suggested text and documents matching the query.
            </returns>
            <remarks>
            The non-generic overloads of the Suggest, SuggestAsync, and SuggestWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.SuggestWithHttpMessagesAsync``1(System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Suggests query terms based on input text and matching documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Suggestions"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name="searchText">
            The search text on which to base suggestions.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection that's part of the index definition.
            </param>
            <param name="suggestParameters">
            Parameters to further refine the suggestion query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the suggested text and documents matching the query.
            </returns>
            <remarks>
            The generic overloads of the Suggest, SuggestAsync, and SuggestWithHttpMessagesAsync methods support
            mapping of search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.AutocompleteParameters">
            <summary>
            Additional parameters for AutocompleteGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.AutocompleteParameters.#ctor">
            <summary>
            Initializes a new instance of the AutocompleteParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.AutocompleteParameters.#ctor(Microsoft.Azure.Search.Models.AutocompleteMode,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Double},System.Collections.Generic.IList{System.String},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the AutocompleteParameters class.
            </summary>
            <param name="autocompleteMode">Specifies the mode for Autocomplete.
            The default is 'oneTerm'. Use 'twoTerms' to get shingles and
            'oneTermWithContext' to use the current context while producing
            auto-completed terms. Possible values include: 'oneTerm',
            'twoTerms', 'oneTermWithContext'</param>
            <param name="filter">An OData expression that filters the documents
            used to produce completed terms for the Autocomplete
            result.</param>
            <param name="useFuzzyMatching">A value indicating whether to use
            fuzzy matching for the autocomplete query. Default is false. When
            set to true, the query will find terms even if there's a
            substituted or missing character in the search text. While this
            provides a better experience in some scenarios, it comes at a
            performance cost as fuzzy autocomplete queries are slower and
            consume more resources.</param>
            <param name="highlightPostTag">A string tag that is appended to hit
            highlights. Must be set with highlightPreTag. If omitted, hit
            highlighting is disabled.</param>
            <param name="highlightPreTag">A string tag that is prepended to hit
            highlights. Must be set with highlightPostTag. If omitted, hit
            highlighting is disabled.</param>
            <param name="minimumCoverage">A number between 0 and 100 indicating
            the percentage of the index that must be covered by an autocomplete
            query in order for the query to be reported as a success. This
            parameter can be useful for ensuring search availability even for
            services with only one replica. The default is 80.</param>
            <param name="searchFields">The list of field names to consider when
            querying for auto-completed terms. Target fields must be included
            in the specified suggester.</param>
            <param name="top">The number of auto-completed terms to retrieve.
            This must be a value between 1 and 100. The default is 5.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteParameters.AutocompleteMode">
            <summary>
            Gets or sets specifies the mode for Autocomplete. The default is
            'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext'
            to use the current context while producing auto-completed terms.
            Possible values include: 'oneTerm', 'twoTerms',
            'oneTermWithContext'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteParameters.Filter">
            <summary>
            Gets or sets an OData expression that filters the documents used to
            produce completed terms for the Autocomplete result.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteParameters.UseFuzzyMatching">
            <summary>
            Gets or sets a value indicating whether to use fuzzy matching for
            the autocomplete query. Default is false. When set to true, the
            query will find terms even if there's a substituted or missing
            character in the search text. While this provides a better
            experience in some scenarios, it comes at a performance cost as
            fuzzy autocomplete queries are slower and consume more resources.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteParameters.HighlightPostTag">
            <summary>
            Gets or sets a string tag that is appended to hit highlights. Must
            be set with highlightPreTag. If omitted, hit highlighting is
            disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteParameters.HighlightPreTag">
            <summary>
            Gets or sets a string tag that is prepended to hit highlights. Must
            be set with highlightPostTag. If omitted, hit highlighting is
            disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteParameters.MinimumCoverage">
            <summary>
            Gets or sets a number between 0 and 100 indicating the percentage
            of the index that must be covered by an autocomplete query in order
            for the query to be reported as a success. This parameter can be
            useful for ensuring search availability even for services with only
            one replica. The default is 80.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteParameters.SearchFields">
            <summary>
            Gets or sets the list of field names to consider when querying for
            auto-completed terms. Target fields must be included in the
            specified suggester.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteParameters.Top">
            <summary>
            Gets or sets the number of auto-completed terms to retrieve. This
            must be a value between 1 and 100. The default is 5.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.Document">
            <summary>
            Represents a document as a property bag. This is useful for scenarios where the index schema is only known
            at run-time.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.Document.#ctor">
            <summary>
            Initializes a new instance of the Document class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.DocumentSearchResult`1">
            <summary>
            Response containing search results from an index.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.DocumentSearchResult`1.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Search.Models.SearchResult{`0}},System.Nullable{System.Int64},System.Nullable{System.Double},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.FacetResult}},Microsoft.Azure.Search.Models.SearchContinuationToken)">
            <summary>
            Initializes a new instance of the DocumentSearchResult class. This constructor is intended to be used for test purposes, since
            the properties of this class are immutable.
            </summary>
            <param name="results">The sequence of results returned by the query.</param>
            <param name="count">The total count of results found by the search operation, or null if the count was not requested.</param>
            <param name="coverage">A value indicating the percentage of the index that was included in the query, or null if
            MinimumCoverage was not set in the <c cref="T:Microsoft.Azure.Search.Models.SearchParameters">SearchParameters</c>.</param>
            <param name="facets">The facet query results for the search operation, or null if the query did not include any facet
            expressions.</param>
            <param name="continuationToken">A continuation token that is used to continue fetching search results. This is necessary when
            Azure Cognitive Search cannot fulfill a search request with a single response.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.ContinuationToken">
            <summary>
            Gets a continuation token that is used to continue fetching search results. This is necessary when Azure
            Search cannot fulfill a search request with a single response.
            </summary>
            <remarks>
            <para>
            This property will be null unless Azure Cognitive Search can't return all the requested documents in a single Search
            response. That can happen for different reasons which are implementation-specific and subject to change.
            Robust clients should always be ready to handle cases where fewer documents than expected are returned and
            a continuation token is included to continue retrieving documents. If this property is not null, you can
            pass its value to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.ContinueSearchWithHttpMessagesAsync(Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">ContinueSearchAsync</c>
            method to retrieve more search results.
            </para>
            <para>
            Note that this property is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            search parameters.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.DocumentSearchResult`1.#ctor">
            <summary>
            Initializes a new instance of the DocumentSearchResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.DocumentSearchResult`1.#ctor(System.Nullable{System.Int64},System.Nullable{System.Double},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.FacetResult}},Microsoft.Azure.Search.Models.SearchRequest,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.SearchResult{`0}},System.String)">
            <summary>
            Initializes a new instance of the DocumentSearchResult class.
            </summary>
            <param name="count">The total count of results found by the search
            operation, or null if the count was not requested. If present, the
            count may be greater than the number of results in this response.
            This can happen if you use the $top or $skip parameters, or if
            Azure Cognitive Search can't return all the requested documents in
            a single Search response.</param>
            <param name="coverage">A value indicating the percentage of the
            index that was included in the query, or null if minimumCoverage
            was not specified in the request.</param>
            <param name="facets">The facet query results for the search
            operation, organized as a collection of buckets for each faceted
            field; null if the query did not include any facet
            expressions.</param>
            <param name="nextPageParameters">Continuation JSON payload returned
            when Azure Cognitive Search can't return all the requested results
            in a single Search response. You can use this JSON along with
            @odata.nextLink to formulate another POST Search request to get the
            next part of the search response.</param>
            <param name="results">The sequence of results returned by the
            query.</param>
            <param name="nextLink">Continuation URL returned when Azure
            Cognitive Search can't return all the requested results in a single
            Search response. You can use this URL to formulate another GET or
            POST Search request to get the next part of the search response.
            Make sure to use the same verb (GET or POST) as the request that
            produced this response.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.Count">
            <summary>
            Gets the total count of results found by the search operation, or
            null if the count was not requested. If present, the count may be
            greater than the number of results in this response. This can
            happen if you use the $top or $skip parameters, or if Azure
            Cognitive Search can't return all the requested documents in a
            single Search response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.Coverage">
            <summary>
            Gets a value indicating the percentage of the index that was
            included in the query, or null if minimumCoverage was not specified
            in the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.Facets">
            <summary>
            Gets the facet query results for the search operation, organized as
            a collection of buckets for each faceted field; null if the query
            did not include any facet expressions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.NextPageParameters">
            <summary>
            Gets continuation JSON payload returned when Azure Cognitive Search
            can't return all the requested results in a single Search response.
            You can use this JSON along with @odata.nextLink to formulate
            another POST Search request to get the next part of the search
            response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.Results">
            <summary>
            Gets the sequence of results returned by the query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSearchResult`1.NextLink">
            <summary>
            Gets continuation URL returned when Azure Cognitive Search can't
            return all the requested results in a single Search response. You
            can use this URL to formulate another GET or POST Search request to
            get the next part of the search response. Make sure to use the same
            verb (GET or POST) as the request that produced this response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.FacetResult">
            <summary>
            A single bucket of a facet query result. Reports the number of
            documents with a field value falling within a particular range or
            having a particular value or interval.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.FacetResult.#ctor(System.Object,System.Object,System.Object,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the FacetResult class. This constructor is intended to be used for test purposes, since the
            properties of this class are immutable.
            </summary>
            <param name="from">A value indicating the inclusive lower bound of the facet's range, or null to indicate that there is no
            lower bound (i.e. -- for the first bucket).</param>
            <param name="to">A value indicating the exclusive upper bound of the facet's range, or null to indicate that there is no
            upper bound (i.e. -- for the last bucket).</param>
            <param name="value">The value of the facet, or the inclusive lower bound if it's an interval facet.</param>
            <param name="count">The approximate count of documents falling within the bucket described by this facet.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.FacetResult.Type">
            <summary>
            Gets a value indicating the type of this facet.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.FacetResult.From">
            <summary>
            Gets a value indicating the inclusive lower bound of the facet's range, or null to indicate that there is
            no lower bound (i.e. -- for the first bucket).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.FacetResult.To">
            <summary>
            Gets a value indicating the exclusive upper bound of the facet's range, or null to indicate that there is
            no upper bound (i.e. -- for the last bucket).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.FacetResult.Value">
            <summary>
            Gets the value of the facet, or the inclusive lower bound if it's an interval facet.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.FacetResult.AsRangeFacetResult``1">
            <summary>
            Attempts to convert the facet to a range facet of the given type.
            </summary>
            <typeparam name="T">
            A type that matches the type of the field to which the facet was applied. Valid types include
            <c cref="T:System.DateTimeOffset">DateTimeOffset</c>, <c cref="T:System.Double">Double</c>, and
            <c cref="T:System.Int64">Int64</c> (long in C#, int64 in F#).
            </typeparam>
            <returns>A new strongly-typed range facet instance.</returns>
            <exception cref="T:System.InvalidCastException">This instance is not a range facet of the given type.</exception>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.FacetResult.AsValueFacetResult``1">
            <summary>
            Attempts to convert the facet to a value facet of the given type.
            </summary>
            <typeparam name="T">
            A type that matches the type of the field to which the facet was applied.
            </typeparam>
            <returns>A new strongly-typed value facet instance.</returns>
            <exception cref="T:System.InvalidCastException">This instance is not a value facet of the given type.</exception>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.FacetResult.#ctor">
            <summary>
            Initializes a new instance of the FacetResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.FacetResult.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the FacetResult class.
            </summary>
            <param name="additionalProperties">Unmatched properties from the
            message are deserialized this collection</param>
            <param name="count">The approximate count of documents falling
            within the bucket described by this facet.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.FacetResult.AdditionalProperties">
            <summary>
            Gets or sets unmatched properties from the message are deserialized
            this collection
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.FacetResult.Count">
            <summary>
            Gets the approximate count of documents falling within the bucket
            described by this facet.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.FacetType">
            <summary>
            Specifies the type of a facet query result.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Search.Models.FacetType.Value">
            <summary>
            The facet counts documents with a particular field value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Search.Models.FacetType.Range">
            <summary>
            The facet counts documents with a field value in a particular range.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexAction">
            <summary>
            Provides factory methods for creating an index action that operates on a document.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.Delete(System.String,System.String)">
            <summary>
            Creates a new IndexAction for deleting a document.
            </summary>
            <param name="keyName">The name of the key field of the index.</param>
            <param name="keyValue">The key of the document to delete.</param>
            <returns>A new IndexAction.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.Delete``1(``0)">
            <summary>
            Creates a new IndexAction for deleting a document.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="document">The document to delete; Fields other than the key are ignored.</param>
            <returns>A new IndexAction.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.Merge``1(``0)">
            <summary>
            Creates a new IndexAction for merging a document into an existing document in the index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="document">The document to merge; Set only the properties that you want to change.</param>
            <returns>A new IndexAction.</returns>
            <remarks>
            <para>If type T contains non-nullable value-typed properties, these properties may not merge correctly. If you
            do not set such a property, it will automatically take its default value (for example, 0 for int or false
            for bool), which will override the value of the property currently stored in the index, even if this was
            not your intent. For this reason, it is strongly recommended that you always declare value-typed
            properties to be nullable in type T.</para>
            <para>The above does not apply if you are using <c cref="T:Microsoft.Azure.Search.Models.Document">Document</c> as type T.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload``1(``0)">
            <summary>
            Creates a new IndexAction for uploading a document to the index, or merging it into an existing document
            if it already exists in the index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="document">The document to merge or upload.</param>
            <returns>A new IndexAction.</returns>
            <remarks>
            <para>If type T contains non-nullable value-typed properties, these properties may not merge correctly. If you
            do not set such a property, it will automatically take its default value (for example, 0 for int or false
            for bool), which will override the value of the property currently stored in the index, even if this was
            not your intent. For this reason, it is strongly recommended that you always declare value-typed
            properties to be nullable in type T.</para>
            <para>The above does not apply if you are using <c cref="T:Microsoft.Azure.Search.Models.Document">Document</c> as type T.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.Upload``1(``0)">
            <summary>
            Creates a new IndexAction for uploading a document to the index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="document">The document to upload.</param>
            <returns>A new IndexAction.</returns>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexBatch">
            <summary>
            Provides factory methods for creating a batch of document write operations to send to the search index.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.Delete(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new IndexBatch for deleting a batch of documents.
            </summary>
            <param name="keyName">The name of the key field that uniquely identifies documents in the index.</param>
            <param name="keyValues">The keys of the documents to delete.</param>
            <returns>A new IndexBatch.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.Delete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new IndexBatch for deleting a batch of documents.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="documents">The documents to delete; Fields other than the key are ignored.</param>
            <returns>A new IndexBatch.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.Merge``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new IndexBatch for merging documents into existing documents in the index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="documents">The documents to merge; Set only the properties that you want to change.</param>
            <returns>A new IndexBatch.</returns>
            <remarks>
            <para>If type T contains non-nullable value-typed properties, these properties may not merge correctly. If you
            do not set such a property, it will automatically take its default value (for example, 0 for int or false
            for bool), which will override the value of the property currently stored in the index, even if this was
            not your intent. For this reason, it is strongly recommended that you always declare value-typed
            properties to be nullable in type T.</para>
            <para>The above does not apply if you are using <c cref="T:Microsoft.Azure.Search.Models.Document">Document</c> as type T.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.MergeOrUpload``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new IndexBatch for uploading documents to the index, or merging them into existing documents
            for those that already exist in the index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="documents">The documents to merge or upload.</param>
            <returns>A new IndexBatch.</returns>
            <remarks>
            <para>If type T contains non-nullable value-typed properties, these properties may not merge correctly. If you
            do not set such a property, it will automatically take its default value (for example, 0 for int or false
            for bool), which will override the value of the property currently stored in the index, even if this was
            not your intent. For this reason, it is strongly recommended that you always declare value-typed
            properties to be nullable in type T.</para>
            <para>The above does not apply if you are using <c cref="T:Microsoft.Azure.Search.Models.Document">Document</c> as type T.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.New``1(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.IndexAction{``0}})">
            <summary>
            Creates a new instance of the IndexBatch class.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="actions">The index actions to include in the batch.</param>
            <returns>A new IndexBatch.</returns>
            <remarks>
            You can use this method as a convenience if you don't want to explicitly specify your model class as a
            type parameter.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.Upload``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new IndexBatch for uploading documents to the index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="documents">The documents to upload.</param>
            <returns>A new IndexBatch.</returns>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.RangeFacetResult`1">
            <summary>
            A single bucket of a range facet query result that reports the number of documents with a field value falling
            within a particular range.
            </summary>
            <typeparam name="T">
            A type that matches the type of the field to which the facet was applied. Valid types include
            <c cref="T:System.DateTimeOffset">DateTimeOffset</c>, <c cref="T:System.Double">Double</c>, and
            <c cref="T:System.Int64">Int64</c> (long in C#, int64 in F#).
            </typeparam>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.RangeFacetResult`1.#ctor(System.Int64,System.Nullable{`0},System.Nullable{`0})">
            <summary>
            Creates a new instance of the <c cref="T:Microsoft.Azure.Search.Models.RangeFacetResult`1">RangeFacetResult</c> class.
            </summary>
            <param name="count">The approximate count of documents falling within the bucket described by this facet.</param>
            <param name="from">A value indicating the inclusive lower bound of the facet's range, or <c>null</c> to indicate that there is
            no lower bound (for the first bucket).</param>
            <param name="to">A value indicating the exclusive upper bound of the facet's range, or <c>null</c> to indicate that there is
            no upper bound (for the last bucket).</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.RangeFacetResult`1.Count">
            <summary>
            Gets the approximate count of documents falling within the bucket described by this facet.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.RangeFacetResult`1.From">
            <summary>
            Gets a value indicating the inclusive lower bound of the facet's range, or <c>null</c> to indicate that there is
            no lower bound (for the first bucket).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.RangeFacetResult`1.To">
            <summary>
            Gets a value indicating the exclusive upper bound of the facet's range, or <c>null</c> to indicate that there is
            no upper bound (for the last bucket).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.ScoringParameter">
            <summary>
            Represents a parameter value to be used in scoring functions (for example, referencePointParameter).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the ScoringParameter class with the given name and string values.
            </summary>
            <param name="name">Name of the scoring parameter.</param>
            <param name="values">Values of the scoring parameter.</param>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,Microsoft.Spatial.GeographyPoint)">
            <summary>
            Initializes a new instance of the ScoringParameter class with the given name and GeographyPoint value.
            </summary>
            <param name="name">Name of the scoring parameter.</param>
            <param name="value">Value of the scoring parameter.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.ScoringParameter.Name">
            <summary>
            Gets the name of the scoring parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.ScoringParameter.Values">
            <summary>
            Gets the values of the scoring parameter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.ScoringParameter.ToString">
            <summary>
            Returns the scoring parameter in a format that can be used in a Search API request.
            </summary>
            <returns>
            The scoring parameter as a colon-separated name-value pair (for example, mylocation:-122.2,44.8)
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SearchContinuationToken">
            <summary>
            Encapsulates state required to continue fetching search results. This is necessary when Azure Cognitive Search cannot
            fulfill a search request with a single response.
            </summary>
            <remarks>
            This class supports using <c cref="T:Newtonsoft.Json.JsonConvert">JsonConvert</c> to convert to and from a JSON payload. This can be useful if you
            call Azure Cognitive Search from a web application and you need to exchange continuation tokens with a browser or mobile client while paging
            through search results.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchContinuationToken.CreateTestToken(System.String)">
            <summary>
            Creates a new <c cref="T:Microsoft.Azure.Search.Models.SearchContinuationToken">SearchContinuationToken</c> for test purposes.
            </summary>
            <param name="nextLink">The @odata.nextLink of the continuation token.</param>
            <returns>A new continuation token for test purposes only.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchContinuationToken.CreateTestToken(System.String,System.String,Microsoft.Azure.Search.Models.SearchParameters)">
            <summary>
            Creates a new <c cref="T:Microsoft.Azure.Search.Models.SearchContinuationToken">SearchContinuationToken</c> for test purposes.
            </summary>
            <param name="nextLink">The @odata.nextLink of the continuation token.</param>
            <param name="searchText">Optional; The search text of the request represented by this token.</param>
            <param name="searchParameters">Optional; Search parameters of the request represented by this token.</param>
            <returns>A new continuation token for test purposes only.</returns>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.Internal.SearchContinuationTokenComparer">
            <summary>
            Compares two <c cref="T:Microsoft.Azure.Search.Models.SearchContinuationToken">SearchContinuationToken</c> instances for equality.
            </summary>
            <para>
            This class is part of the internal implementation of the Azure Cognitive Search .NET SDK. It is not intended to be used directly by
            application code.
            </para>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.Internal.SearchContinuationTokenComparer.Equals(Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchContinuationToken)">
            <summary>
            Compares the two given continuation tokens for equality.
            </summary>
            <param name="first">The first continuation token to compare.</param>
            <param name="second">The second continuation token to compare.</param>
            <returns><c>true</c> if the two tokens are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.Internal.SearchContinuationTokenComparer.GetHashCode(Microsoft.Azure.Search.Models.SearchContinuationToken)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The object for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SearchParameters">
            <summary>
            Parameters for filtering, sorting, faceting, paging, and other search query behaviors.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchParameters.#ctor">
            <summary>
            Initializes a new instance of the SearchParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchParameters.#ctor(System.Boolean,System.Collections.Generic.IList{System.String},System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.Nullable{System.Double},System.Collections.Generic.IList{System.String},Microsoft.Azure.Search.Models.QueryType,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringParameter},System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.Search.Models.SearchMode,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the SearchParameters class.
            </summary>
            <param name="includeTotalResultCount">A value that specifies
            whether to fetch the total count of results. Default is false.
            Setting this value to true may have a performance impact. Note that
            the count returned is an approximation.</param>
            <param name="facets">The list of facet expressions to apply to the
            search query. Each facet expression contains a field name,
            optionally followed by a comma-separated list of name:value
            pairs.</param>
            <param name="filter">The OData $filter expression to apply to the
            search query.</param>
            <param name="highlightFields">The list of field names to use for
            hit highlights. Only searchable fields can be used for hit
            highlighting.</param>
            <param name="highlightPostTag">A string tag that is appended to hit
            highlights. Must be set with highlightPreTag. Default is
            &amp;lt;/em&amp;gt;.</param>
            <param name="highlightPreTag">A string tag that is prepended to hit
            highlights. Must be set with highlightPostTag. Default is
            &amp;lt;em&amp;gt;.</param>
            <param name="minimumCoverage">A number between 0 and 100 indicating
            the percentage of the index that must be covered by a search query
            in order for the query to be reported as a success. This parameter
            can be useful for ensuring search availability even for services
            with only one replica. The default is 100.</param>
            <param name="orderBy">The list of OData $orderby expressions by
            which to sort the results. Each expression can be either a field
            name or a call to either the geo.distance() or the search.score()
            functions. Each expression can be followed by asc to indicate
            ascending, and desc to indicate descending. The default is
            ascending order. Ties will be broken by the match scores of
            documents. If no OrderBy is specified, the default sort order is
            descending by document match score. There can be at most 32
            $orderby clauses.</param>
            <param name="queryType">A value that specifies the syntax of the
            search query. The default is 'simple'. Use 'full' if your query
            uses the Lucene query syntax. Possible values include: 'simple',
            'full'</param>
            <param name="scoringParameters">The list of parameter values to be
            used in scoring functions (for example, referencePointParameter)
            using the format name-values. For example, if the scoring profile
            defines a function with a parameter called 'mylocation' the
            parameter string would be "mylocation--122.2,44.8" (without the
            quotes).</param>
            <param name="scoringProfile">The name of a scoring profile to
            evaluate match scores for matching documents in order to sort the
            results.</param>
            <param name="searchFields">The list of field names to which to
            scope the full-text search. When using fielded search
            (fieldName:searchExpression) in a full Lucene query, the field
            names of each fielded search expression take precedence over any
            field names listed in this parameter.</param>
            <param name="searchMode">A value that specifies whether any or all
            of the search terms must be matched in order to count the document
            as a match. Possible values include: 'any', 'all'</param>
            <param name="select">The list of fields to retrieve. If
            unspecified, all fields marked as retrievable in the schema are
            included.</param>
            <param name="skip">The number of search results to skip. This value
            cannot be greater than 100,000. If you need to scan documents in
            sequence, but cannot use $skip due to this limitation, consider
            using $orderby on a totally-ordered key and $filter with a range
            query instead.</param>
            <param name="top">The number of search results to retrieve. This
            can be used in conjunction with $skip to implement client-side
            paging of search results. If results are truncated due to
            server-side paging, the response will include a continuation token
            that can be used to issue another Search request for the next page
            of results.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.IncludeTotalResultCount">
            <summary>
            Gets or sets a value that specifies whether to fetch the total
            count of results. Default is false. Setting this value to true may
            have a performance impact. Note that the count returned is an
            approximation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.Facets">
            <summary>
            Gets or sets the list of facet expressions to apply to the search
            query. Each facet expression contains a field name, optionally
            followed by a comma-separated list of name:value pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.Filter">
            <summary>
            Gets or sets the OData $filter expression to apply to the search
            query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.HighlightFields">
            <summary>
            Gets or sets the list of field names to use for hit highlights.
            Only searchable fields can be used for hit highlighting.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.HighlightPostTag">
            <summary>
            Gets or sets a string tag that is appended to hit highlights. Must
            be set with highlightPreTag. Default is
            &amp;amp;lt;/em&amp;amp;gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.HighlightPreTag">
            <summary>
            Gets or sets a string tag that is prepended to hit highlights. Must
            be set with highlightPostTag. Default is
            &amp;amp;lt;em&amp;amp;gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.MinimumCoverage">
            <summary>
            Gets or sets a number between 0 and 100 indicating the percentage
            of the index that must be covered by a search query in order for
            the query to be reported as a success. This parameter can be useful
            for ensuring search availability even for services with only one
            replica. The default is 100.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.OrderBy">
            <summary>
            Gets or sets the list of OData $orderby expressions by which to
            sort the results. Each expression can be either a field name or a
            call to either the geo.distance() or the search.score() functions.
            Each expression can be followed by asc to indicate ascending, and
            desc to indicate descending. The default is ascending order. Ties
            will be broken by the match scores of documents. If no OrderBy is
            specified, the default sort order is descending by document match
            score. There can be at most 32 $orderby clauses.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.QueryType">
            <summary>
            Gets or sets a value that specifies the syntax of the search query.
            The default is 'simple'. Use 'full' if your query uses the Lucene
            query syntax. Possible values include: 'simple', 'full'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.ScoringParameters">
            <summary>
            Gets or sets the list of parameter values to be used in scoring
            functions (for example, referencePointParameter) using the format
            name-values. For example, if the scoring profile defines a function
            with a parameter called 'mylocation' the parameter string would be
            "mylocation--122.2,44.8" (without the quotes).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.ScoringProfile">
            <summary>
            Gets or sets the name of a scoring profile to evaluate match scores
            for matching documents in order to sort the results.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.SearchFields">
            <summary>
            Gets or sets the list of field names to which to scope the
            full-text search. When using fielded search
            (fieldName:searchExpression) in a full Lucene query, the field
            names of each fielded search expression take precedence over any
            field names listed in this parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.SearchMode">
            <summary>
            Gets or sets a value that specifies whether any or all of the
            search terms must be matched in order to count the document as a
            match. Possible values include: 'any', 'all'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.Select">
            <summary>
            Gets or sets the list of fields to retrieve. If unspecified, all
            fields marked as retrievable in the schema are included.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">
            <summary>
            Gets or sets the number of search results to skip. This value
            cannot be greater than 100,000. If you need to scan documents in
            sequence, but cannot use $skip due to this limitation, consider
            using $orderby on a totally-ordered key and $filter with a range
            query instead.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.Top">
            <summary>
            Gets or sets the number of search results to retrieve. This can be
            used in conjunction with $skip to implement client-side paging of
            search results. If results are truncated due to server-side paging,
            the response will include a continuation token that can be used to
            issue another Search request for the next page of results.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SuggestParameters">
            <summary>
            Parameters for filtering, sorting, fuzzy matching, and other suggestions query behaviors.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestParameters.EnsureSelect">
            <summary>
            Returns this instance if it has a non-null <c cref="P:Microsoft.Azure.Search.Models.SuggestParameters.Select">Select</c> property,
            or a new instance with Select set to "*" otherwise.
            </summary>
            <returns>A <c cref="T:Microsoft.Azure.Search.Models.SuggestParameters">SuggestParameters</c> instance that has a
            non-null <c cref="P:Microsoft.Azure.Search.Models.SuggestParameters.Select">Select</c> property</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestParameters.#ctor">
            <summary>
            Initializes a new instance of the SuggestParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestParameters.#ctor(System.String,System.Boolean,System.String,System.String,System.Nullable{System.Double},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the SuggestParameters class.
            </summary>
            <param name="filter">An OData expression that filters the documents
            considered for suggestions.</param>
            <param name="useFuzzyMatching">A value indicating whether to use
            fuzzy matching for the suggestions query. Default is false. When
            set to true, the query will find terms even if there's a
            substituted or missing character in the search text. While this
            provides a better experience in some scenarios, it comes at a
            performance cost as fuzzy suggestions queries are slower and
            consume more resources.</param>
            <param name="highlightPostTag">A string tag that is appended to hit
            highlights. Must be set with highlightPreTag. If omitted, hit
            highlighting of suggestions is disabled.</param>
            <param name="highlightPreTag">A string tag that is prepended to hit
            highlights. Must be set with highlightPostTag. If omitted, hit
            highlighting of suggestions is disabled.</param>
            <param name="minimumCoverage">A number between 0 and 100 indicating
            the percentage of the index that must be covered by a suggestions
            query in order for the query to be reported as a success. This
            parameter can be useful for ensuring search availability even for
            services with only one replica. The default is 80.</param>
            <param name="orderBy">The list of OData $orderby expressions by
            which to sort the results. Each expression can be either a field
            name or a call to either the geo.distance() or the search.score()
            functions. Each expression can be followed by asc to indicate
            ascending, or desc to indicate descending. The default is ascending
            order. Ties will be broken by the match scores of documents. If no
            $orderby is specified, the default sort order is descending by
            document match score. There can be at most 32 $orderby
            clauses.</param>
            <param name="searchFields">The list of field names to search for
            the specified search text. Target fields must be included in the
            specified suggester.</param>
            <param name="select">The list of fields to retrieve. If
            unspecified, only the key field will be included in the
            results.</param>
            <param name="top">The number of suggestions to retrieve. The value
            must be a number between 1 and 100. The default is 5.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.Filter">
            <summary>
            Gets or sets an OData expression that filters the documents
            considered for suggestions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.UseFuzzyMatching">
            <summary>
            Gets or sets a value indicating whether to use fuzzy matching for
            the suggestions query. Default is false. When set to true, the
            query will find terms even if there's a substituted or missing
            character in the search text. While this provides a better
            experience in some scenarios, it comes at a performance cost as
            fuzzy suggestions queries are slower and consume more resources.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.HighlightPostTag">
            <summary>
            Gets or sets a string tag that is appended to hit highlights. Must
            be set with highlightPreTag. If omitted, hit highlighting of
            suggestions is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.HighlightPreTag">
            <summary>
            Gets or sets a string tag that is prepended to hit highlights. Must
            be set with highlightPostTag. If omitted, hit highlighting of
            suggestions is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.MinimumCoverage">
            <summary>
            Gets or sets a number between 0 and 100 indicating the percentage
            of the index that must be covered by a suggestions query in order
            for the query to be reported as a success. This parameter can be
            useful for ensuring search availability even for services with only
            one replica. The default is 80.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.OrderBy">
            <summary>
            Gets or sets the list of OData $orderby expressions by which to
            sort the results. Each expression can be either a field name or a
            call to either the geo.distance() or the search.score() functions.
            Each expression can be followed by asc to indicate ascending, or
            desc to indicate descending. The default is ascending order. Ties
            will be broken by the match scores of documents. If no $orderby is
            specified, the default sort order is descending by document match
            score. There can be at most 32 $orderby clauses.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.SearchFields">
            <summary>
            Gets or sets the list of field names to search for the specified
            search text. Target fields must be included in the specified
            suggester.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.Select">
            <summary>
            Gets or sets the list of fields to retrieve. If unspecified, only
            the key field will be included in the results.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.Top">
            <summary>
            Gets or sets the number of suggestions to retrieve. The value must
            be a number between 1 and 100. The default is 5.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.ValueFacetResult`1">
            <summary>
            A single bucket of a simple or interval facet query result that reports the number of documents with a field
            falling within a particular interval or having a specific value.
            </summary>
            <typeparam name="T">
            A type that matches the type of the field to which the facet was applied.
            </typeparam>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.ValueFacetResult`1.#ctor(System.Int64,`0)">
            <summary>
            Creates a new instance of the <c cref="T:Microsoft.Azure.Search.Models.ValueFacetResult`1">ValueFacetResult</c> class.
            </summary>
            <param name="count">The approximate count of documents falling within the bucket described by this facet.</param>
            <param name="value">The value of the facet, or the inclusive lower bound if it's an interval facet.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.ValueFacetResult`1.Count">
            <summary>
            Gets the approximate count of documents falling within the bucket described by this facet.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.ValueFacetResult`1.Value">
            <summary>
            Gets the value of the facet, or the inclusive lower bound if it's an interval facet.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.AutocompleteItem">
            <summary>
            The result of Autocomplete requests.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.AutocompleteItem.#ctor">
            <summary>
            Initializes a new instance of the AutocompleteItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.AutocompleteItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AutocompleteItem class.
            </summary>
            <param name="text">The completed term.</param>
            <param name="queryPlusText">The query along with the completed
            term.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteItem.Text">
            <summary>
            Gets the completed term.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteItem.QueryPlusText">
            <summary>
            Gets the query along with the completed term.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.AutocompleteMode">
            <summary>
            Defines values for AutocompleteMode.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.AutocompleteRequest">
            <summary>
            Parameters for fuzzy matching, and other autocomplete query behaviors.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.AutocompleteRequest.#ctor">
            <summary>
            Initializes a new instance of the AutocompleteRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.AutocompleteRequest.#ctor(System.String,System.Nullable{Microsoft.Azure.Search.Models.AutocompleteMode},System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Double},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the AutocompleteRequest class.
            </summary>
            <param name="searchText">The search text on which to base
            autocomplete results.</param>
            <param name="autocompleteMode">Specifies the mode for Autocomplete.
            The default is 'oneTerm'. Use 'twoTerms' to get shingles and
            'oneTermWithContext' to use the current context while producing
            auto-completed terms. Possible values include: 'oneTerm',
            'twoTerms', 'oneTermWithContext'</param>
            <param name="filter">An OData expression that filters the documents
            used to produce completed terms for the Autocomplete
            result.</param>
            <param name="useFuzzyMatching">A value indicating whether to use
            fuzzy matching for the autocomplete query. Default is false. When
            set to true, the query will autocomplete terms even if there's a
            substituted or missing character in the search text. While this
            provides a better experience in some scenarios, it comes at a
            performance cost as fuzzy autocomplete queries are slower and
            consume more resources.</param>
            <param name="highlightPostTag">A string tag that is appended to hit
            highlights. Must be set with highlightPreTag. If omitted, hit
            highlighting is disabled.</param>
            <param name="highlightPreTag">A string tag that is prepended to hit
            highlights. Must be set with highlightPostTag. If omitted, hit
            highlighting is disabled.</param>
            <param name="minimumCoverage">A number between 0 and 100 indicating
            the percentage of the index that must be covered by an autocomplete
            query in order for the query to be reported as a success. This
            parameter can be useful for ensuring search availability even for
            services with only one replica. The default is 80.</param>
            <param name="searchFields">The comma-separated list of field names
            to consider when querying for auto-completed terms. Target fields
            must be included in the specified suggester.</param>
            <param name="suggesterName">The name of the suggester as specified
            in the suggesters collection that's part of the index
            definition.</param>
            <param name="top">The number of auto-completed terms to retrieve.
            This must be a value between 1 and 100. The default is 5.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteRequest.SearchText">
            <summary>
            Gets or sets the search text on which to base autocomplete results.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteRequest.AutocompleteMode">
            <summary>
            Gets or sets specifies the mode for Autocomplete. The default is
            'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext'
            to use the current context while producing auto-completed terms.
            Possible values include: 'oneTerm', 'twoTerms',
            'oneTermWithContext'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteRequest.Filter">
            <summary>
            Gets or sets an OData expression that filters the documents used to
            produce completed terms for the Autocomplete result.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteRequest.UseFuzzyMatching">
            <summary>
            Gets or sets a value indicating whether to use fuzzy matching for
            the autocomplete query. Default is false. When set to true, the
            query will autocomplete terms even if there's a substituted or
            missing character in the search text. While this provides a better
            experience in some scenarios, it comes at a performance cost as
            fuzzy autocomplete queries are slower and consume more resources.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteRequest.HighlightPostTag">
            <summary>
            Gets or sets a string tag that is appended to hit highlights. Must
            be set with highlightPreTag. If omitted, hit highlighting is
            disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteRequest.HighlightPreTag">
            <summary>
            Gets or sets a string tag that is prepended to hit highlights. Must
            be set with highlightPostTag. If omitted, hit highlighting is
            disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteRequest.MinimumCoverage">
            <summary>
            Gets or sets a number between 0 and 100 indicating the percentage
            of the index that must be covered by an autocomplete query in order
            for the query to be reported as a success. This parameter can be
            useful for ensuring search availability even for services with only
            one replica. The default is 80.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteRequest.SearchFields">
            <summary>
            Gets or sets the comma-separated list of field names to consider
            when querying for auto-completed terms. Target fields must be
            included in the specified suggester.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteRequest.SuggesterName">
            <summary>
            Gets or sets the name of the suggester as specified in the
            suggesters collection that's part of the index definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteRequest.Top">
            <summary>
            Gets or sets the number of auto-completed terms to retrieve. This
            must be a value between 1 and 100. The default is 5.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.AutocompleteResult">
            <summary>
            The result of Autocomplete query.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.AutocompleteResult.#ctor">
            <summary>
            Initializes a new instance of the AutocompleteResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.AutocompleteResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Search.Models.AutocompleteItem})">
            <summary>
            Initializes a new instance of the AutocompleteResult class.
            </summary>
            <param name="results">The list of returned Autocompleted
            items.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.AutocompleteResult.Results">
            <summary>
            Gets the list of returned Autocompleted items.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.DocumentIndexResult">
            <summary>
            Response containing the status of operations for all documents in the
            indexing request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.DocumentIndexResult.#ctor">
            <summary>
            Initializes a new instance of the DocumentIndexResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.DocumentIndexResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Search.Models.IndexingResult})">
            <summary>
            Initializes a new instance of the DocumentIndexResult class.
            </summary>
            <param name="results">The list of status information for each
            document in the indexing request.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentIndexResult.Results">
            <summary>
            Gets the list of status information for each document in the
            indexing request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.DocumentSuggestResult`1">
            <summary>
            Response containing suggestion query results from an index.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.DocumentSuggestResult`1.#ctor">
            <summary>
            Initializes a new instance of the DocumentSuggestResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.DocumentSuggestResult`1.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Search.Models.SuggestResult{`0}},System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the DocumentSuggestResult class.
            </summary>
            <param name="results">The sequence of results returned by the
            query.</param>
            <param name="coverage">A value indicating the percentage of the
            index that was included in the query, or null if minimumCoverage
            was not set in the request.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSuggestResult`1.Results">
            <summary>
            Gets the sequence of results returned by the query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSuggestResult`1.Coverage">
            <summary>
            Gets a value indicating the percentage of the index that was
            included in the query, or null if minimumCoverage was not set in
            the request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexAction`1">
            <summary>
            Represents an index action that operates on a document.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction`1.#ctor">
            <summary>
            Initializes a new instance of the IndexAction class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction`1.#ctor(`0,Microsoft.Azure.Search.Models.IndexActionType)">
            <summary>
            Initializes a new instance of the IndexAction class.
            </summary>
            <param name="document">The document on which the action will be performed.</param>
            <param name="actionType">The operation to perform on a document in
            an indexing batch. Possible values include: 'upload', 'merge',
            'mergeOrUpload', 'delete'</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexAction`1.Document">
            <summary>
            Gets the document on which the action will be performed; Fields other than the key are ignored for delete actions. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexAction`1.ActionType">
            <summary>
            Gets or sets the operation to perform on a document in an indexing
            batch. Possible values include: 'upload', 'merge', 'mergeOrUpload',
            'delete'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexActionType">
            <summary>
            Defines values for IndexActionType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexBatch`1">
            <summary>
            Contains a batch of document write actions to send to the index.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch`1.#ctor">
            <summary>
            Initializes a new instance of the IndexBatch class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch`1.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.IndexAction{`0}})">
            <summary>
            Initializes a new instance of the IndexBatch class.
            </summary>
            <param name="actions">The actions in the batch.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexBatch`1.Actions">
            <summary>
            Gets or sets the actions in the batch.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch`1.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexingResult">
            <summary>
            Status of an indexing operation for a single document.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexingResult.#ctor">
            <summary>
            Initializes a new instance of the IndexingResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexingResult.#ctor(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the IndexingResult class.
            </summary>
            <param name="key">The key of a document that was in the indexing
            request.</param>
            <param name="errorMessage">The error message explaining why the
            indexing operation failed for the document identified by the key;
            null if indexing succeeded.</param>
            <param name="succeeded">A value indicating whether the indexing
            operation succeeded for the document identified by the key.</param>
            <param name="statusCode">The status code of the indexing operation.
            Possible values include: 200 for a successful update or delete, 201
            for successful document creation, 400 for a malformed input
            document, 404 for document not found, 409 for a version conflict,
            422 when the index is temporarily unavailable, or 503 for when the
            service is too busy.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexingResult.Key">
            <summary>
            Gets the key of a document that was in the indexing request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexingResult.ErrorMessage">
            <summary>
            Gets the error message explaining why the indexing operation failed
            for the document identified by the key; null if indexing succeeded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexingResult.Succeeded">
            <summary>
            Gets a value indicating whether the indexing operation succeeded
            for the document identified by the key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexingResult.StatusCode">
            <summary>
            Gets the status code of the indexing operation. Possible values
            include: 200 for a successful update or delete, 201 for successful
            document creation, 400 for a malformed input document, 404 for
            document not found, 409 for a version conflict, 422 when the index
            is temporarily unavailable, or 503 for when the service is too
            busy.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.QueryType">
            <summary>
            Defines values for QueryType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SearchMode">
            <summary>
            Defines values for SearchMode.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SearchRequest">
            <summary>
            Parameters for filtering, sorting, faceting, paging, and other search
            query behaviors.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchRequest.#ctor">
            <summary>
            Initializes a new instance of the SearchRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchRequest.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Double},System.String,System.Nullable{Microsoft.Azure.Search.Models.QueryType},System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Search.Models.SearchMode},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the SearchRequest class.
            </summary>
            <param name="includeTotalResultCount">A value that specifies
            whether to fetch the total count of results. Default is false.
            Setting this value to true may have a performance impact. Note that
            the count returned is an approximation.</param>
            <param name="facets">The list of facet expressions to apply to the
            search query. Each facet expression contains a field name,
            optionally followed by a comma-separated list of name:value
            pairs.</param>
            <param name="filter">The OData $filter expression to apply to the
            search query.</param>
            <param name="highlightFields">The comma-separated list of field
            names to use for hit highlights. Only searchable fields can be used
            for hit highlighting.</param>
            <param name="highlightPostTag">A string tag that is appended to hit
            highlights. Must be set with highlightPreTag. Default is
            &amp;lt;/em&amp;gt;.</param>
            <param name="highlightPreTag">A string tag that is prepended to hit
            highlights. Must be set with highlightPostTag. Default is
            &amp;lt;em&amp;gt;.</param>
            <param name="minimumCoverage">A number between 0 and 100 indicating
            the percentage of the index that must be covered by a search query
            in order for the query to be reported as a success. This parameter
            can be useful for ensuring search availability even for services
            with only one replica. The default is 100.</param>
            <param name="orderBy">The comma-separated list of OData $orderby
            expressions by which to sort the results. Each expression can be
            either a field name or a call to either the geo.distance() or the
            search.score() functions. Each expression can be followed by asc to
            indicate ascending, or desc to indicate descending. The default is
            ascending order. Ties will be broken by the match scores of
            documents. If no $orderby is specified, the default sort order is
            descending by document match score. There can be at most 32
            $orderby clauses.</param>
            <param name="queryType">A value that specifies the syntax of the
            search query. The default is 'simple'. Use 'full' if your query
            uses the Lucene query syntax. Possible values include: 'simple',
            'full'</param>
            <param name="scoringParameters">The list of parameter values to be
            used in scoring functions (for example, referencePointParameter)
            using the format name-values. For example, if the scoring profile
            defines a function with a parameter called 'mylocation' the
            parameter string would be "mylocation--122.2,44.8" (without the
            quotes).</param>
            <param name="scoringProfile">The name of a scoring profile to
            evaluate match scores for matching documents in order to sort the
            results.</param>
            <param name="searchText">A full-text search query expression; Use
            "*" or omit this parameter to match all documents.</param>
            <param name="searchFields">The comma-separated list of field names
            to which to scope the full-text search. When using fielded search
            (fieldName:searchExpression) in a full Lucene query, the field
            names of each fielded search expression take precedence over any
            field names listed in this parameter.</param>
            <param name="searchMode">A value that specifies whether any or all
            of the search terms must be matched in order to count the document
            as a match. Possible values include: 'any', 'all'</param>
            <param name="select">The comma-separated list of fields to
            retrieve. If unspecified, all fields marked as retrievable in the
            schema are included.</param>
            <param name="skip">The number of search results to skip. This value
            cannot be greater than 100,000. If you need to scan documents in
            sequence, but cannot use skip due to this limitation, consider
            using orderby on a totally-ordered key and filter with a range
            query instead.</param>
            <param name="top">The number of search results to retrieve. This
            can be used in conjunction with $skip to implement client-side
            paging of search results. If results are truncated due to
            server-side paging, the response will include a continuation token
            that can be used to issue another Search request for the next page
            of results.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.IncludeTotalResultCount">
            <summary>
            Gets or sets a value that specifies whether to fetch the total
            count of results. Default is false. Setting this value to true may
            have a performance impact. Note that the count returned is an
            approximation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.Facets">
            <summary>
            Gets or sets the list of facet expressions to apply to the search
            query. Each facet expression contains a field name, optionally
            followed by a comma-separated list of name:value pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.Filter">
            <summary>
            Gets or sets the OData $filter expression to apply to the search
            query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.HighlightFields">
            <summary>
            Gets or sets the comma-separated list of field names to use for hit
            highlights. Only searchable fields can be used for hit
            highlighting.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.HighlightPostTag">
            <summary>
            Gets or sets a string tag that is appended to hit highlights. Must
            be set with highlightPreTag. Default is
            &amp;amp;lt;/em&amp;amp;gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.HighlightPreTag">
            <summary>
            Gets or sets a string tag that is prepended to hit highlights. Must
            be set with highlightPostTag. Default is
            &amp;amp;lt;em&amp;amp;gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.MinimumCoverage">
            <summary>
            Gets or sets a number between 0 and 100 indicating the percentage
            of the index that must be covered by a search query in order for
            the query to be reported as a success. This parameter can be useful
            for ensuring search availability even for services with only one
            replica. The default is 100.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.OrderBy">
            <summary>
            Gets or sets the comma-separated list of OData $orderby expressions
            by which to sort the results. Each expression can be either a field
            name or a call to either the geo.distance() or the search.score()
            functions. Each expression can be followed by asc to indicate
            ascending, or desc to indicate descending. The default is ascending
            order. Ties will be broken by the match scores of documents. If no
            $orderby is specified, the default sort order is descending by
            document match score. There can be at most 32 $orderby clauses.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.QueryType">
            <summary>
            Gets or sets a value that specifies the syntax of the search query.
            The default is 'simple'. Use 'full' if your query uses the Lucene
            query syntax. Possible values include: 'simple', 'full'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.ScoringParameters">
            <summary>
            Gets or sets the list of parameter values to be used in scoring
            functions (for example, referencePointParameter) using the format
            name-values. For example, if the scoring profile defines a function
            with a parameter called 'mylocation' the parameter string would be
            "mylocation--122.2,44.8" (without the quotes).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.ScoringProfile">
            <summary>
            Gets or sets the name of a scoring profile to evaluate match scores
            for matching documents in order to sort the results.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.SearchText">
            <summary>
            Gets or sets a full-text search query expression; Use "*" or omit
            this parameter to match all documents.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.SearchFields">
            <summary>
            Gets or sets the comma-separated list of field names to which to
            scope the full-text search. When using fielded search
            (fieldName:searchExpression) in a full Lucene query, the field
            names of each fielded search expression take precedence over any
            field names listed in this parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.SearchMode">
            <summary>
            Gets or sets a value that specifies whether any or all of the
            search terms must be matched in order to count the document as a
            match. Possible values include: 'any', 'all'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.Select">
            <summary>
            Gets or sets the comma-separated list of fields to retrieve. If
            unspecified, all fields marked as retrievable in the schema are
            included.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.Skip">
            <summary>
            Gets or sets the number of search results to skip. This value
            cannot be greater than 100,000. If you need to scan documents in
            sequence, but cannot use skip due to this limitation, consider
            using orderby on a totally-ordered key and filter with a range
            query instead.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchRequest.Top">
            <summary>
            Gets or sets the number of search results to retrieve. This can be
            used in conjunction with $skip to implement client-side paging of
            search results. If results are truncated due to server-side paging,
            the response will include a continuation token that can be used to
            issue another Search request for the next page of results.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SearchResult`1">
            <summary>
            Contains a document found by a search query, plus associated metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchResult`1.#ctor">
            <summary>
            Initializes a new instance of the SearchResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchResult`1.#ctor(`0,System.Double,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}})">
            <summary>
            Initializes a new instance of the SearchResult class.
            </summary>
            <param name="document">The document found by the search query.</param>
            <param name="score">The relevance score of the document compared to
            other documents returned by the query.</param>
            <param name="highlights">Text fragments from the document that
            indicate the matching search terms, organized by each applicable
            field; null if hit highlighting was not enabled for the
            query.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchResult`1.Document">
            <summary>
            Gets the document found by the search query. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchResult`1.Score">
            <summary>
            Gets the relevance score of the document compared to other
            documents returned by the query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchResult`1.Highlights">
            <summary>
            Gets text fragments from the document that indicate the matching
            search terms, organized by each applicable field; null if hit
            highlighting was not enabled for the query.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SuggestRequest">
            <summary>
            Parameters for filtering, sorting, fuzzy matching, and other
            suggestions query behaviors.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestRequest.#ctor">
            <summary>
            Initializes a new instance of the SuggestRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestRequest.#ctor(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Double},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the SuggestRequest class.
            </summary>
            <param name="filter">An OData expression that filters the documents
            considered for suggestions.</param>
            <param name="useFuzzyMatching">A value indicating whether to use
            fuzzy matching for the suggestion query. Default is false. When set
            to true, the query will find suggestions even if there's a
            substituted or missing character in the search text. While this
            provides a better experience in some scenarios, it comes at a
            performance cost as fuzzy suggestion searches are slower and
            consume more resources.</param>
            <param name="highlightPostTag">A string tag that is appended to hit
            highlights. Must be set with highlightPreTag. If omitted, hit
            highlighting of suggestions is disabled.</param>
            <param name="highlightPreTag">A string tag that is prepended to hit
            highlights. Must be set with highlightPostTag. If omitted, hit
            highlighting of suggestions is disabled.</param>
            <param name="minimumCoverage">A number between 0 and 100 indicating
            the percentage of the index that must be covered by a suggestion
            query in order for the query to be reported as a success. This
            parameter can be useful for ensuring search availability even for
            services with only one replica. The default is 80.</param>
            <param name="orderBy">The comma-separated list of OData $orderby
            expressions by which to sort the results. Each expression can be
            either a field name or a call to either the geo.distance() or the
            search.score() functions. Each expression can be followed by asc to
            indicate ascending, or desc to indicate descending. The default is
            ascending order. Ties will be broken by the match scores of
            documents. If no $orderby is specified, the default sort order is
            descending by document match score. There can be at most 32
            $orderby clauses.</param>
            <param name="searchText">The search text to use to suggest
            documents. Must be at least 1 character, and no more than 100
            characters.</param>
            <param name="searchFields">The comma-separated list of field names
            to search for the specified search text. Target fields must be
            included in the specified suggester.</param>
            <param name="select">The comma-separated list of fields to
            retrieve. If unspecified, only the key field will be included in
            the results.</param>
            <param name="suggesterName">The name of the suggester as specified
            in the suggesters collection that's part of the index
            definition.</param>
            <param name="top">The number of suggestions to retrieve. This must
            be a value between 1 and 100. The default is 5.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestRequest.Filter">
            <summary>
            Gets or sets an OData expression that filters the documents
            considered for suggestions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestRequest.UseFuzzyMatching">
            <summary>
            Gets or sets a value indicating whether to use fuzzy matching for
            the suggestion query. Default is false. When set to true, the query
            will find suggestions even if there's a substituted or missing
            character in the search text. While this provides a better
            experience in some scenarios, it comes at a performance cost as
            fuzzy suggestion searches are slower and consume more resources.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestRequest.HighlightPostTag">
            <summary>
            Gets or sets a string tag that is appended to hit highlights. Must
            be set with highlightPreTag. If omitted, hit highlighting of
            suggestions is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestRequest.HighlightPreTag">
            <summary>
            Gets or sets a string tag that is prepended to hit highlights. Must
            be set with highlightPostTag. If omitted, hit highlighting of
            suggestions is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestRequest.MinimumCoverage">
            <summary>
            Gets or sets a number between 0 and 100 indicating the percentage
            of the index that must be covered by a suggestion query in order
            for the query to be reported as a success. This parameter can be
            useful for ensuring search availability even for services with only
            one replica. The default is 80.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestRequest.OrderBy">
            <summary>
            Gets or sets the comma-separated list of OData $orderby expressions
            by which to sort the results. Each expression can be either a field
            name or a call to either the geo.distance() or the search.score()
            functions. Each expression can be followed by asc to indicate
            ascending, or desc to indicate descending. The default is ascending
            order. Ties will be broken by the match scores of documents. If no
            $orderby is specified, the default sort order is descending by
            document match score. There can be at most 32 $orderby clauses.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestRequest.SearchText">
            <summary>
            Gets or sets the search text to use to suggest documents. Must be
            at least 1 character, and no more than 100 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestRequest.SearchFields">
            <summary>
            Gets or sets the comma-separated list of field names to search for
            the specified search text. Target fields must be included in the
            specified suggester.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestRequest.Select">
            <summary>
            Gets or sets the comma-separated list of fields to retrieve. If
            unspecified, only the key field will be included in the results.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestRequest.SuggesterName">
            <summary>
            Gets or sets the name of the suggester as specified in the
            suggesters collection that's part of the index definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestRequest.Top">
            <summary>
            Gets or sets the number of suggestions to retrieve. This must be a
            value between 1 and 100. The default is 5.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SuggestResult`1">
            <summary>
            A result containing a document found by a suggestion query, plus
            associated metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestResult`1.#ctor">
            <summary>
            Initializes a new instance of the SuggestResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestResult`1.#ctor(`0,System.String)">
            <summary>
            Initializes a new instance of the SuggestResult class.
            </summary>
            <param name="document">The document on which the suggested text is based.</param>
            <param name="text">The text of the suggestion result.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestResult`1.Document">
            <summary>
            Gets the document on which the suggested text is based. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestResult`1.Text">
            <summary>
            Gets the text of the suggestion result.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.IndexBatchException">
            <summary>
            Exception thrown when an indexing operation only partially succeeds.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.IndexBatchException.#ctor(Microsoft.Azure.Search.Models.DocumentIndexResult)">
            <summary>
            Initializes a new instance of the IndexBatchException class.
            </summary>
            <param name="documentIndexResult">The deserialized response from the index request.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">
            <summary>
            Gets the results for the index batch that contains the status for each individual index action.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.IndexBatchException.FindFailedActionsToRetry(Microsoft.Azure.Search.Models.IndexBatch{Microsoft.Azure.Search.Models.Document},System.String)">
            <summary>
            Finds all index actions in the given batch that failed and need to be retried, and returns them in a
            new batch.
            </summary>
            <param name="originalBatch">The batch that partially failed indexing.</param>
            <param name="keyFieldName">The name of the key field from the index schema.</param>
            <returns>
            A new batch containing all the actions from the given batch that failed and should be retried.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Search.IndexBatchException.FindFailedActionsToRetry``1(Microsoft.Azure.Search.Models.IndexBatch{``0},System.Func{``0,System.String})">
            <summary>
            Finds all index actions in the given batch that failed and need to be retried, and returns them in a
            new batch.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="originalBatch">The batch that partially failed indexing.</param>
            <param name="keySelector">A lambda that retrieves a key value from a given document of type T.</param>
            <returns>
            A new batch containing all the actions from the given batch that failed and should be retried.
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Search.ISearchIndexClient">
            <summary>
            Client that can be used to query an index and upload, merge, or delete
            documents.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.SearchCredentials">
            <summary>
            Gets the credentials used to authenticate to an Azure Cognitive Search service. This can be either a query API key or an admin API key.
            </summary>
            <remarks>
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys"/> for more information about API keys in Azure Cognitive Search.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.UseHttpGetForQueries">
            <summary>
            Indicates whether the index client should use HTTP GET for making Search, Suggest, and Autocomplete requests to the
            Azure Cognitive Search REST API. The default is <c>false</c>, which indicates that HTTP POST will be used.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.ISearchIndexClient.TargetDifferentIndex(System.String)">
            <summary>
            Changes the BaseUri of this client to target a different index in the same Azure Cognitive Search service. This method is NOT thread-safe; You
            must guarantee that no other threads are using the client before calling it.
            </summary>
            <param name="newIndexName">The name of the index to which all subsequent requests should be sent.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.SerializationSettings">
            <summary>
            The base URI of the service.
            </summary>
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.SearchServiceName">
            <summary>
            The name of the search service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.SearchDnsSuffix">
            <summary>
            The DNS suffix of the search service. The default is
            search.windows.net.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.IndexName">
            <summary>
            The name of the index.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.Documents">
            <summary>
            Gets the IDocumentsOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.SearchIndexClient">
            <summary>
            Client that can be used to query an index and upload, merge, or delete
            documents.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.Documents">
            <summary>
            Gets the IDocumentsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(System.String,System.String,Microsoft.Azure.Search.SearchCredentials)">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='searchServiceName'>Required. The name of the search service.</param>
            <param name='indexName'>Required. The name of the search index.</param>
            <param name='credentials'>Required. The credentials used to authenticate to a search service.
            <see href="https://docs.microsoft.com/rest/api/searchservice/" />
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(System.String,System.String,Microsoft.Azure.Search.SearchCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='searchServiceName'>Required. The name of the search service.</param>
            <param name='indexName'>Required. The name of the search index.</param>
            <param name='credentials'>Required. The credentials used to authenticate to a search service.
            <see href="https://docs.microsoft.com/rest/api/searchservice/" />
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The set of delegating handlers to insert in the http
            client pipeline.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.SearchCredentials">
            <summary>
            Gets the credentials used to authenticate to a search service. This can be either a query API key or an admin API key.
            </summary>
            <remarks>
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys"/> for more information about API keys in Azure Cognitive Search.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.UseHttpGetForQueries">
            <summary>
            Indicates whether the index client should use HTTP GET for making Search, Suggest, and Autocomplete requests to the
            Azure Cognitive Search REST API. The default is <c>false</c>, which indicates that HTTP POST will be used.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.TargetDifferentIndex(System.String)">
            <summary>
            Changes the BaseUri of this client to target a different index in the same Azure Cognitive Search service. This method is NOT thread-safe; You
            must guarantee that no other threads are using the client before calling it.
            </summary>
            <param name="newIndexName">The name of the index to which all subsequent requests should be sent.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.SearchServiceName">
            <summary>
            The name of the search service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.SearchDnsSuffix">
            <summary>
            The DNS suffix of the search service. The default is search.windows.net.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.IndexName">
            <summary>
            The name of the index.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.DocumentsProxy">
            <summary>
            Gets the IDocumentsProxyOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling SearchIndexClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling SearchIndexClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.Internal.CustomJsonConverters">
            <summary>
            Provides access to custom <c cref="T:Newtonsoft.Json.JsonConverter">JsonConverter</c> instances used by the Azure
            Search .NET SDK. For test purposes only.
            </summary>
            <remarks>
            This class is part of the internal implementation of the Azure Cognitive Search .NET SDK. It is not
            intended to be used directly by application code.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Serialization.Internal.CustomJsonConverters.CreateDateTimeConverter">
            <summary>
            Creates a new converter that converts between dates serialized in ISO 8601 format in JSON strings and
            <c cref="T:System.DateTime">System.DateTime</c> instances.
            </summary>
            <returns>A JSON converter.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Serialization.Internal.CustomJsonConverters.CreateDocumentConverter">
            <summary>
            Creates a new converter that deserializes JSON objects and arrays to .NET types instead
            of <c cref="T:Newtonsoft.Json.Linq.JObject">JObject</c> and <c cref="T:Newtonsoft.Json.Linq.JArray">JArray</c>.
            </summary>
            <returns>A JSON converter.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Serialization.Internal.CustomJsonConverters.CreateDoubleConverter">
            <summary>
            Creates a new converter that serializes doubles to and from the OData EDM wire format.
            </summary>
            <returns>A JSON converter.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Serialization.Internal.CustomJsonConverters.CreateGeoJsonPointConverter">
            <summary>
            Creates a new converter that converts between
            <c cref="T:Microsoft.Spatial.GeographyPoint">Microsoft.Spatial.GeographyPoint</c> objects and Geo-JSON points.
            </summary>
            <returns>A JSON converter.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Serialization.Internal.CustomJsonConverters.CreateAllConverters">
            <summary>
            Creates a collection of all custom converters.
            </summary>
            <returns>An enumerable sequence of JSON converters.</returns>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.DocumentConverter">
            <summary>
            Deserializes JSON objects and arrays to .NET types instead of JObject and JArray.
            </summary>
            <remarks>
            This JSON converter supports reading only. When deserializing JSON to an instance of type <c cref="T:Microsoft.Azure.Search.Models.Document">Document</c>, it will
            recursively deserialize JSON objects to <c cref="T:Microsoft.Azure.Search.Models.Document">Document</c> instances as well. This includes object properties as well
            as arrays of objects. It also makes a best-effort attempt to deserialize JSON arrays to a specific .NET array type. Heterogenous
            arrays are deserialized to arrays of <c cref="T:System.Object">System.Object</c>.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.EdmDoubleConverter">
            <summary>
            Serializes doubles to and from the OData EDM wire format.
            </summary>
            <remarks>
            This JSON converter treats all but three <c cref="T:System.Double">System.Double</c> values as JSON numbers. The three exceptions
            are <c cref="F:System.Double.NaN">NaN</c>, which converts to and from the JSON string "NaN",
            <c cref="F:System.Double.PositiveInfinity">PositiveInfinity</c>, which converts to and from the JSON string "INF", and
            <c cref="F:System.Double.NegativeInfinity">NegativeInfinity</c>, which converts to and from the JSON string "-INF".
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.GeoJsonExtensions">
            <summary>
            Defines extension methods for various JSON.NET types that make it easier to recognize and read Geo-JSON.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Serialization.GeoJsonExtensions.IsGeoJsonPoint(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Determines whether the given <c cref="T:Newtonsoft.Json.Linq.JObject">JObject</c> is a valid Geo-JSON point.
            </summary>
            <param name="obj">The JSON object to test.</param>
            <returns><c>true</c> if the JSON object is not null and is a valid Geo-JSON point, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Serialization.GeoJsonExtensions.ReadGeoJsonPoint(Newtonsoft.Json.JsonReader)">
            <summary>
            Reads a Geo-JSON point into a <c cref="T:Microsoft.Spatial.GeographyPoint">GeographyPoint</c> instance, or throws
            <c cref="T:Newtonsoft.Json.JsonSerializationException">JsonSerializationException</c> if the reader is not positioned on the
            beginning of a valid Geo-JSON point.
            </summary>
            <param name="reader">The JSON reader from which to read a Geo-JSON point.</param>
            <returns>A <c cref="T:Microsoft.Spatial.GeographyPoint">GeographyPoint</c> instance.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Serialization.GeoJsonExtensions.WriteGeoJsonPoint(Newtonsoft.Json.JsonWriter,Microsoft.Spatial.GeographyPoint)">
            <summary>
            Writes a <c cref="T:Microsoft.Spatial.GeographyPoint">GeographyPoint</c> instance as Geo-JSON format.
            </summary>
            <param name="writer">The JSON writer to which to write the Geo-JSON point.</param>
            <param name="point">The <c cref="T:Microsoft.Spatial.GeographyPoint">GeographyPoint</c> instance to write.</param>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.GeoJsonPointConverter">
            <summary>
            Converts between <c cref="T:Microsoft.Spatial.GeographyPoint">Microsoft.Spatial.GeographyPoint</c> objects and Geo-JSON points.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.IndexActionConverter`1">
            <summary>
            Serializes IndexAction instances so that the JSON is OData-compliant.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.InjectingJsonWriter">
            <summary>
            Allows injection of arbitrary JSON during serialization via a callback.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.Iso8601DateTimeConverter">
            <summary>
            Converts between dates serialized in ISO 8601 format in JSON strings and <c cref="T:System.DateTime">System.DateTime</c> instances.
            </summary>
            <remarks>
            This JSON converter ensures that <c cref="T:System.DateTime">System.DateTime</c> instances are serialized to have the UTC timezone
            explicitly included in the JSON. It also ensures that any time zone information in the JSON is taken into account when
            deserializing to a new <c cref="T:System.DateTime">System.DateTime</c> instance. For example, if the JSON value's time component
            is noon and its time zone is UTC-8, the deserialized <c cref="T:System.DateTime">System.DateTime</c> instance's time will be 8 PM
            and its <c cref="P:System.DateTime.Kind">Kind</c> will be <c cref="F:System.DateTimeKind.Utc">DateTimeKind.Utc</c>.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.SearchResultConverter`1">
            <summary>
            Deserializes SearchResult instances from OData-compliant JSON.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.SuggestResultConverter`1">
            <summary>
            Deserializes SuggestResult instances from OData-compliant JSON.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
        </member>
        <member name="T:Microsoft.Azure.Search.DocumentsProxyOperations">
            <summary>
            DocumentsProxyOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsProxyOperations.#ctor(Microsoft.Azure.Search.SearchIndexClient)">
            <summary>
            Initializes a new instance of the DocumentsProxyOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Search.DocumentsProxyOperations.Client">
            <summary>
            Gets a reference to the SearchIndexClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsProxyOperations.CountWithHttpMessagesAsync(Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Queries the number of documents in the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Count-Documents" />
            </summary>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsProxyOperations.SearchGetWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Searches for documents in the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents" />
            </summary>
            <param name='searchText'>
            A full-text search query expression; Use "*" or omit this parameter to
            match all documents.
            </param>
            <param name='searchParameters'>
            Additional parameters for the operation
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsProxyOperations.SearchPostWithHttpMessagesAsync``1(Microsoft.Azure.Search.Models.SearchRequest,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Searches for documents in the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents" />
            </summary>
            <param name='searchRequest'>
            The definition of the Search request.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsProxyOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Retrieves a document from the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/lookup-document" />
            </summary>
            <param name='key'>
            The key of the document to retrieve.
            </param>
            <param name='selectedFields'>
            List of field names to retrieve for the document; Any field not retrieved
            will be missing from the returned document.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsProxyOperations.SuggestGetWithHttpMessagesAsync``1(System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Suggests documents in the index that match the given partial query text.
            <see href="https://docs.microsoft.com/rest/api/searchservice/suggestions" />
            </summary>
            <param name='searchText'>
            The search text to use to suggest documents. Must be at least 1 character,
            and no more than 100 characters.
            </param>
            <param name='suggesterName'>
            The name of the suggester as specified in the suggesters collection that's
            part of the index definition.
            </param>
            <param name='suggestParameters'>
            Additional parameters for the operation
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsProxyOperations.SuggestPostWithHttpMessagesAsync``1(Microsoft.Azure.Search.Models.SuggestRequest,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Suggests documents in the index that match the given partial query text.
            <see href="https://docs.microsoft.com/rest/api/searchservice/suggestions" />
            </summary>
            <param name='suggestRequest'>
            The Suggest request.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsProxyOperations.IndexWithHttpMessagesAsync``1(Microsoft.Azure.Search.Models.IndexBatch{``0},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Sends a batch of document write actions to the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents" />
            </summary>
            <param name='batch'>
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsProxyOperations.AutocompleteGetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AutocompleteParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Autocompletes incomplete query terms based on input text and matching terms
            in the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/autocomplete" />
            </summary>
            <param name='searchText'>
            The incomplete term which should be auto-completed.
            </param>
            <param name='suggesterName'>
            The name of the suggester as specified in the suggesters collection that's
            part of the index definition.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='autocompleteParameters'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsProxyOperations.AutocompletePostWithHttpMessagesAsync(Microsoft.Azure.Search.Models.AutocompleteRequest,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Autocompletes incomplete query terms based on input text and matching terms
            in the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/autocomplete" />
            </summary>
            <param name='autocompleteRequest'>
            The definition of the Autocomplete request.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Search.IDocumentsProxyOperations">
            <summary>
            DocumentsProxyOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsProxyOperations.CountWithHttpMessagesAsync(Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Queries the number of documents in the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Count-Documents" />
            </summary>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsProxyOperations.SearchGetWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Searches for documents in the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents" />
            </summary>
            <param name='searchText'>
            A full-text search query expression; Use "*" or omit this parameter
            to match all documents.
            </param>
            <param name='searchParameters'>
            Additional parameters for the operation
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsProxyOperations.SearchPostWithHttpMessagesAsync``1(Microsoft.Azure.Search.Models.SearchRequest,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Searches for documents in the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents" />
            </summary>
            <param name='searchRequest'>
            The definition of the Search request.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsProxyOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Retrieves a document from the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/lookup-document" />
            </summary>
            <param name='key'>
            The key of the document to retrieve.
            </param>
            <param name='selectedFields'>
            List of field names to retrieve for the document; Any field not
            retrieved will be missing from the returned document.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsProxyOperations.SuggestGetWithHttpMessagesAsync``1(System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Suggests documents in the index that match the given partial query
            text.
            <see href="https://docs.microsoft.com/rest/api/searchservice/suggestions" />
            </summary>
            <param name='searchText'>
            The search text to use to suggest documents. Must be at least 1
            character, and no more than 100 characters.
            </param>
            <param name='suggesterName'>
            The name of the suggester as specified in the suggesters collection
            that's part of the index definition.
            </param>
            <param name='suggestParameters'>
            Additional parameters for the operation
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsProxyOperations.SuggestPostWithHttpMessagesAsync``1(Microsoft.Azure.Search.Models.SuggestRequest,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Suggests documents in the index that match the given partial query
            text.
            <see href="https://docs.microsoft.com/rest/api/searchservice/suggestions" />
            </summary>
            <param name='suggestRequest'>
            The Suggest request.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsProxyOperations.IndexWithHttpMessagesAsync``1(Microsoft.Azure.Search.Models.IndexBatch{``0},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Sends a batch of document write actions to the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents" />
            </summary>
            <param name='batch'>
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsProxyOperations.AutocompleteGetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AutocompleteParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Autocompletes incomplete query terms based on input text and
            matching terms in the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/autocomplete" />
            </summary>
            <param name='searchText'>
            The incomplete term which should be auto-completed.
            </param>
            <param name='suggesterName'>
            The name of the suggester as specified in the suggesters collection
            that's part of the index definition.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='autocompleteParameters'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsProxyOperations.AutocompletePostWithHttpMessagesAsync(Microsoft.Azure.Search.Models.AutocompleteRequest,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken,Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Autocompletes incomplete query terms based on input text and
            matching terms in the index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/autocomplete" />
            </summary>
            <param name='autocompleteRequest'>
            The definition of the Autocomplete request.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
    </members>
</doc>
